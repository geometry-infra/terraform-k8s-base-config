# Available parameters and their default values for the Consul chart.

global:
  datacenter: ${region}

  # gossipEncryption configures which Kubernetes secret to retrieve Consul's
  # gossip encryption key from (see https://www.consul.io/docs/agent/options.html#_encrypt).
  # If secretName or secretKey are not set, gossip encryption will not be enabled.
  # The secret must be in the same namespace that Consul is installed into.
  #
  # The secret can be created by running:
  #    kubectl create secret generic consul-gossip-encryption-key \
  #      --from-literal=key=$(consul keygen).
  #
  # In this case, secretName would be "consul-gossip-encryption-key" and
  # secretKey would be "key".
  gossipEncryption:
    # secretName is the name of the Kubernetes secret that holds the gossip
    # encryption key. The secret must be in the same namespace that Consul is installed into.
    secretName: ""
    # secretKey is the key within the Kubernetes secret that holds the gossip
    # encryption key.
    secretKey: ""

server:
  exposeGossipAndRPCPorts: true
  extraConfig: |
    {
    	"telemetry": {
    		"prometheus_retention_time": "24h",
    		"disable_hostname": true
    	}
    }

client:
  extraConfig: |
    {
    	"telemetry": {
    		"prometheus_retention_time": "24h",
    		"disable_hostname": true
    	}
    }

ui:
  ingress:
    enabled: true
    hosts:
      - host: consul.${domain}
        paths:
          - /ui
    tls:
      - hosts:
        - consul.${domain}
        secretName: consul-ui-tls

syncCatalog:
  enabled: true

connectInject:
  enabled: true

meshGateway:
  enabled: true
